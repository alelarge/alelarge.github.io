@import "variables";

/**
 * Animation loader pleine page
 */
.loading-container {
  position: fixed;
  background: #fff;
  height: 100%;
  width: 100%;

  z-index: 1; // définit le « z-order » d'un élément positionné et de ses éléments
  // enfants ou de ses éléments flexibles. Lorsque des éléments se
  // chevauchent, le z-order détermine l'ordre des différentes couches
  // que formeront les éléments. Généralement, un élément couvrira un
  // autre élément si sa valeur de z-index est supérieure à celle du deuxième élément.
  top: 0;
  align-items: center; // contrôle l'alignement sur l'axe secondaire (ici centré à la verticale)
  justify-content: center; // Éléments centré sur l'axe horizontal
  display: flex; // définit l'affichage en boîtes flexibles
  animation: fadeOut 1s; // applique l'animation définit dans le keyframe fadeout avec une durée d'une seconde
  animation-fill-mode: forwards; // indique la façon dont une animation CSS doit appliquer
  // les styles à sa cible avant et après son exécution. Spécifie un style pour l'élément lorsque
  // l'animation n'est pas en cours de lecture (avant qu'elle ne démarre, après qu'elle se termine,
  // ou les deux)

  .loading {
    color: $primary-color;
    perspective: 1000px; //position de l'élément sur l'axe z(profondeur) par rapport à l'observateur
    font-size: 84px;
    font-family: "Montserrat", sans-serif;
    font-weight: 800; //graisse
    text-align: center;
    span {
      display: inline-block; // s'affiche en ligne. pas de saut après la ligne
      margin: 0 -0.05em;
      transform-origin: 50% 50% -25px; //modifier l'origine du repère partent du centre de l’élément agrandit vers l'extérieur
      transform-style: preserve-3d;
      animation: loading 1.6s infinite;
      // Compte jusqu'à 6 et pour chaque iteration, elle applique un délai à l'animation à chaque enfant (nth-child)
      @for $i from 1 through 6 {
        &:nth-child(#{$i + 1}) {
          animation-delay: #{$i * 0.1}s;
        }
      }
    }

    @media screen and (max-width: 720px) {
      display: inline-grid;
      // sur un élément, tous les enfants directs de cet élément deviennent des éléments de grille.
    }
  }
}

// Définition des étapes qui composent la séquence de l'animation de disparition progressive (fondu)
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  99% {
    opacity: 0;
    height: 100%;
  }
  100% {
    opacity: 0;
    height: 0px;
  }
}

// Définition des étapes qui composent la séquence de l'animation de rotation des lettres du loader
@keyframes loading {
  0% {
    transform: rotateX(-360deg);
  }
  70% {
    transform: rotateX(0);
  }
}

/**
 * Animation tuile apparition progression
 */
@keyframes fadeInUp {
  from {
    transform: translate3d(
      0,
      40px,
      0
    ); // change selon 3 axes dimensionnelles: 0 axe horizontal,
    //  40 axe vertical et 0 axe profondeur
  }

  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

.fade-in-up {
  animation-duration: 1s;
  animation-fill-mode: both; // l'extension des propriétés de l'animation dans les deux directions
  opacity: 0;
  animation-name: fadeInUp; //keyframe fadeInUP pour faire apparaître les cartes du menu en fondu
}

/* 
 * Animations remplissage progressif boutton j'aime
 */
.like {
  &:hover {
    .like__icon {
      &.like__icon--bg {
        opacity: 1;
        animation: gradient 0.5s ease forwards; // animation du dégradé à 0.5sec
        // ease: vitesse de l'animation augmente au milieu de celle-ci puis ralentit à la fin.
        // les propriétés de l'animation sont conservés à la fin de celle ci
      }
    }
  }
  .like__icon {
    cursor: pointer;
    font-size: 1.5em;
    opacity: 1;
    &.like__icon--bg {
      opacity: 0;
      font-size: 1.37em;
      background-color: $secondary-color;
      background-image: linear-gradient(
        45deg,
        #fff,
        #fff,
        #fff,
        $primary-color,
        $secondary-color
      ); // dégradé du coeur
      background-size: 350% 100%; // augmenter artificiellement la taille du background pour que le dégradé soit plus joli
      -webkit-background-clip: text; // détermine la zone de rendu du texte chrome
      background-clip: text; // détermine la zone de rendu du background sur le texte
      -moz-background-clip: text;
      -webkit-text-fill-color: transparent; //rends la couleur du texte transparent
      -moz-text-fill-color: transparent; //rends la couleur du texte transparent firefox
    }
  }
}
// animation du background pour le coeur
@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 100% 50%;
  }
}

/**
 * Animations sur la page restaurant
 */
.menu-restaurant {
  // # Décallage temporel de l'affichage progressif
  // On applique un délais à partir du second enfant de chaque
  // section (Entrées, Plat, Desserts) et on ajoute 3ms de délais
  // à chaque enfant
  // le premier n'a pas besoin de délai car on veut qu'il s'anime dès l'affichage de la page
  .toutes_les_entrees div:nth-child(2),
  .tous_les_plats div:nth-child(2),
  .tous_les_desserts div:nth-child(2) {
    animation-delay: 0.4s;
  }
  .toutes_les_entrees div:nth-child(3),
  .tous_les_plats div:nth-child(3),
  .tous_les_desserts div:nth-child(3) {
    animation-delay: 0.7s;
  }
  .toutes_les_entrees div:nth-child(4),
  .tous_les_plats div:nth-child(4),
  .tous_les_desserts div:nth-child(4) {
    animation-delay: 1s;
  }
  .toutes_les_entrees div:nth-child(5),
  .tous_les_plats div:nth-child(5),
  .tous_les_desserts div:nth-child(5) {
    animation-delay: 0.4s;
  }

  /**
   * Animation apparition coulissante du bouton d'ajout de plat
   */
  // Au survol d'une recette du menu, on réduit la taille de la partie intitulé
  // et on augmente d'autant celle de la coche
  .carte-item {
    &:hover {
      .recette-info {
        // Selecteur du nom du plat et sous titre
        width: calc(100% - 80px); // Définit la largeur à 100% de l'espace -80px
      }
      .recette-check {
        // Selecteur du check vert
        width: 70px;

        .fa-check-circle {
          transform: rotate(0deg);
        }
      }
    }

    .recette-info {
      transition: width ease 0.5s;

      .subtitle,
      .subtitle span:nth-child(1),
      h3 {
        // Affichage des ... si intitulé trop long
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
      }
    }

    .recette-check {
      transition: 0.5s ease; // ease: vitesse de l'animation augmente au milieu de celle-ci puis ralentit à la fin.
      animation-delay: 250ms;

      .fa-check-circle {
        transform: rotate(360deg); // Rotation de la coche
        transition: 0.5s ease; // ease: vitesse de l'animation augmente au milieu de celle-ci puis ralentit à la fin.
      }
    }
  }
}

/**
 * Animation du bouton au survol
 */
.btn {
  &:hover {
    // La couleur s'éclaircie et l'ombre porté devient plus prononcée
    background: linear-gradient(rgb(240 116 218 / 80%), rgb(175 95 220 / 80%));
    box-shadow: 0px 4px 20px rgb(0 0 0 / 60%);
    transition: 0.3s ease-out; // Rapide au début, ralenti à la fin
  }
}
